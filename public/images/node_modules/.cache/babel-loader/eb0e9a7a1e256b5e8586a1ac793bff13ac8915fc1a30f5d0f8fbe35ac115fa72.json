{"ast":null,"code":"var _jsxFileName = \"D:\\\\ZUITT\\\\B443\\\\b443-csp3-fataek-lim\\\\src\\\\components\\\\ProductCard.js\",\n  _s = $RefreshSig$();\nimport { Card, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport PropTypes from 'prop-types';\nimport { useContext } from 'react';\nimport UserContext from '../context/UserContext';\nimport CartContext from '../context/CartContext'; // Import CartContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductCard({\n  productProp,\n  onToggle\n}) {\n  _s();\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    setCart\n  } = useContext(CartContext); // Use CartContext to update the cart\n\n  if (!productProp) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Products Available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n  const {\n    _id,\n    name,\n    description,\n    price,\n    isActive\n  } = productProp || {};\n  const toggleStatus = (id, isActive) => {\n    const url = isActive ? `${process.env.REACT_APP_API_URL}/products/${id}/archive` : `${process.env.REACT_APP_API_URL}/products/${id}/activate`;\n    fetch(url, {\n      method: 'PATCH',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify({\n        isActive: !isActive\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Unsuccessful Product Status Update\",\n          text: data.message\n        });\n      } else {\n        Swal.fire({\n          icon: \"success\",\n          title: \"Product Status Updated Successfully\"\n        });\n        onToggle(id); // Notify parent component to remove the card\n      }\n    }).catch(error => {\n      Swal.fire({\n        icon: \"error\",\n        title: \"An error occurred\",\n        text: error.message\n      });\n    });\n  };\n  const addToCart = () => {\n    fetch(`${process.env.REACT_APP_API_URL}/cart/add-to-cart`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify({\n        productId: _id,\n        quantity: 1,\n        subtotal: price\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        // Ensure prevCart is an array of cartItems\n        setCart(prevCart => {\n          // If prevCart is an object with a cartItems property, use that, otherwise ensure it's an array\n          const currentCartItems = Array.isArray(prevCart) ? prevCart : prevCart.cartItems || [];\n\n          // Update cart with the new item(s)\n          return [...currentCartItems, ...data.cart.cartItems];\n        });\n        Swal.fire({\n          icon: \"success\",\n          title: \"Item added to cart successfully\",\n          text: data.message\n        });\n      } else {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Error adding item to cart\",\n          text: data.message\n        });\n      }\n    }).catch(error => {\n      Swal.fire({\n        icon: \"error\",\n        title: \"An error occurred\",\n        text: error.message\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n        children: \"Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n      className: \"d-flex justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: addToCart,\n        children: \"Add to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), user && user.isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-around\",\n        children: [isActive && /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-primary btn-sm\",\n          to: `/UpdateProduct/${_id}`,\n          children: \"Update Product Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btn-primary btn-sm\",\n          onClick: () => toggleStatus(_id, isActive),\n          children: isActive ? 'Deactivate' : 'Activate'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n\n// Prop validation\n_s(ProductCard, \"dUUbHi4GMbKOBH24ogZF3ffxLRI=\");\n_c = ProductCard;\nProductCard.propTypes = {\n  productProp: PropTypes.shape({\n    _id: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    price: PropTypes.number,\n    isActive: PropTypes.bool // Updated to reflect the new field\n  }),\n  onToggle: PropTypes.func\n};\nvar _c;\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"names":["Card","Button","Link","Swal","PropTypes","useContext","UserContext","CartContext","jsxDEV","_jsxDEV","ProductCard","productProp","onToggle","_s","user","setCart","children","fileName","_jsxFileName","lineNumber","columnNumber","_id","name","description","price","isActive","toggleStatus","id","url","process","env","REACT_APP_API_URL","fetch","method","headers","localStorage","getItem","body","JSON","stringify","then","res","json","data","error","fire","icon","title","text","message","catch","addToCart","Authorization","productId","quantity","subtotal","success","prevCart","currentCartItems","Array","isArray","cartItems","cart","className","Body","Title","Subtitle","Text","Footer","variant","onClick","isAdmin","to","_c","propTypes","shape","string","number","bool","func","$RefreshReg$"],"sources":["D:/ZUITT/B443/b443-csp3-fataek-lim/src/components/ProductCard.js"],"sourcesContent":["import { Card, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport PropTypes from 'prop-types';\nimport { useContext } from 'react';\nimport UserContext from '../context/UserContext';\nimport CartContext from '../context/CartContext'; // Import CartContext\n\nexport default function ProductCard({ productProp, onToggle }) {\n    const { user } = useContext(UserContext);\n    const { setCart } = useContext(CartContext); // Use CartContext to update the cart\n\n    if (!productProp) {\n        return <div>No Products Available</div>;\n    }\n    \n    const { _id, name, description, price, isActive } = productProp || {};\n\n    const toggleStatus = (id, isActive) => {\n        const url = isActive ? `${process.env.REACT_APP_API_URL}/products/${id}/archive` : `${process.env.REACT_APP_API_URL}/products/${id}/activate`;\n\n        fetch(url, {\n            method: 'PATCH',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n            },\n            body: JSON.stringify({ isActive: !isActive })\n        })\n        .then(res => res.json())\n        .then(data => {\n            if (data.error) {\n                Swal.fire({\n                    icon: \"error\",\n                    title: \"Unsuccessful Product Status Update\",\n                    text: data.message\n                });\n            } else {\n                Swal.fire({\n                    icon: \"success\",\n                    title: \"Product Status Updated Successfully\"\n                });\n                onToggle(id); // Notify parent component to remove the card\n            }\n        })\n        .catch(error => {\n            Swal.fire({\n                icon: \"error\",\n                title: \"An error occurred\",\n                text: error.message\n            });\n        });\n    };\n\n    const addToCart = () => {\n        fetch(`${process.env.REACT_APP_API_URL}/cart/add-to-cart`, {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify({\n                productId: _id,\n                quantity: 1,\n                subtotal: price\n            })\n        })\n        .then(res => res.json())\n        .then(data => {\n            if (data.success) {\n                // Ensure prevCart is an array of cartItems\n                setCart(prevCart => {\n                    // If prevCart is an object with a cartItems property, use that, otherwise ensure it's an array\n                    const currentCartItems = Array.isArray(prevCart) ? prevCart : prevCart.cartItems || [];\n\n                    // Update cart with the new item(s)\n                    return [...currentCartItems, ...data.cart.cartItems];\n                });\n\n                Swal.fire({\n                    icon: \"success\",\n                    title: \"Item added to cart successfully\",\n                    text: data.message\n                });\n            } else {\n                Swal.fire({\n                    icon: \"error\",\n                    title: \"Error adding item to cart\",\n                    text: data.message\n                });\n            }\n        })\n        .catch(error => {\n            Swal.fire({\n                icon: \"error\",\n                title: \"An error occurred\",\n                text: error.message\n            });\n        });\n    };\n\n\n\n\n    return (\n        <Card className=\"mt-3\">\n            <Card.Body>\n                <Card.Title>{name}</Card.Title>\n                <Card.Subtitle>Description:</Card.Subtitle>\n                <Card.Text>{description}</Card.Text>\n                <Card.Subtitle>Price:</Card.Subtitle>\n                <Card.Text>{price}</Card.Text>\n            </Card.Body>\n            <Card.Footer className=\"d-flex justify-content-between\">\n                <Button variant=\"success\" onClick={addToCart}>Add to Cart</Button>\n                {(user && user.isAdmin) ? (\n                    <div className=\"d-flex justify-content-around\">\n                        {isActive && (\n                            <Link className=\"btn btn-primary btn-sm\" to={`/UpdateProduct/${_id}`}>Update Product Info</Link>\n                        )}\n                        <Button className=\"btn btn-primary btn-sm\" onClick={() => toggleStatus(_id, isActive)}>\n                            {isActive ? 'Deactivate' : 'Activate'}\n                        </Button>\n                    </div>\n                ) : null}\n            </Card.Footer>\n        </Card>\n    );\n}\n\n// Prop validation\nProductCard.propTypes = {\n    productProp: PropTypes.shape({\n        _id: PropTypes.string,\n        name: PropTypes.string,\n        description: PropTypes.string,\n        price: PropTypes.number,\n        isActive: PropTypes.bool // Updated to reflect the new field\n    }),\n    onToggle: PropTypes.func\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}